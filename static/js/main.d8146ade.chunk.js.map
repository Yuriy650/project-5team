{"version":3,"sources":["Redux/types.js","Redux/reducers/add-category-reducer.js","Redux/reducers/rootReducer.js","store/store.js","components/Header/Header.js","components/Navbar/Navbar.js","components/Navigation.js","components/Tabs/Charges/Charges.js","components/Categories/Categories.js","components/Home/Home.js","components/Charts/ChartsOfCharges.js","components/Charts/ChartsOfIncomes.js","components/Charts/ChartsIncomeCharges.js","components/Charts/Charts.js","components/Tabs/Incomes.js","components/Tabs/TabsContent.js","components/Dialogs/AddNewCategory.js","components/Dialogs/AddNewCharge.js","components/Dialogs/AddNewIncome.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_CATEGORY","initialState","categories","category","Grid","align","color","description","date","rootReducer","combineReducers","addCategoryReducer","state","action","type","payload","store","createStore","composeWithDevTools","window","console","log","getState","Header","props","className","Navbar","to","Navigation","data","Charges","useStyles","makeStyles","theme","table","minWidth","classes","this","TableContainer","component","Paper","Table","TableHead","products","checkFilterProducts","checkFilterTotal","checkFilterDate","TableBody","map","item","i","total","Component","ProductHeadRow","handleOnChange","e","filterProducts","filter","target","value","handleMoneyOnClick","filterTotal","sort","a","b","handleDateOnSubmit","preventDefault","begin","end","beginDate","Date","endDate","filterDate","getTime","InputLabel","htmlFor","NativeSelect","onChange","id","onSubmit","TextField","label","defaultValue","InputLabelProps","shrink","React","ProductRow","height","width","Categories","CategoriesHeadRow","CategoriesRow","Home","ChartsOfCharges","takeDataCharges","dataCharges","localStorage","length","newRow","JSON","parse","getItem","key","chargesCategories","includes","push","bind","chartData","valueField","argumentField","innerRadius","text","ChartsOfIncomes","takeDataIncomes","dataIncomes","incomesCategories","options","title","curveType","legend","position","ChartsIncomeCharges","chartType","Charts","changeChart","changeIncomesChart","changeState","Incomes","incomes","checkFilterIncomesCategory","checkFilterIncomesTotal","checkFilterIncomesDate","handleIncomeCategoryOnChange","filterCategory","handleIncomesDateOnSubmit","handleIncomesMoneyOnClick","getDate","handleChange","TabPanel","children","index","SimpleTabs","useState","setValue","AppBar","style","background","Tabs","val","Tab","path","root","border","borderBottom","boxShadow","textShadow","AddNewCategory","open","setOpen","handleClickOpen","handleClose","Button","variant","onClick","Dialog","onClose","aria-labelledby","DialogTitle","newCategory","Math","floor","random","DialogContent","autoFocus","margin","fullWidth","Select","native","labelId","aria-label","DialogActions","AddNewCharge","setItem","stringify","handleOnSubmit","placeholder","AddNewIncome","handleIncomeOnSubmit","App","findBalance","_products","setState","_incomes","balance","totalIncomes","totalCharges","TabsContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8146ade.chunk.js","sourcesContent":["export const FILTER_INCOMES_CATEGORY = 'FILTER_INCOMES_CATEGORY';\r\nexport const FILTER_INCOMES_TOTAL = 'FILTER_INCOMES_TOTAL';\r\nexport const FILTER_INCOMES_DATE = 'FILTER_INCOMES_DATE';\r\nexport const ADD_CATEGORY='ADD_CATEGORY'","import {ADD_CATEGORY} from \"../types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RestaurantMenuRoundedIcon from \"@material-ui/icons/RestaurantMenuRounded\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport LocalCafeIcon from \"@material-ui/icons/LocalCafe\";\r\nimport LocalGasStationIcon from \"@material-ui/icons/LocalGasStation\";\r\nimport PetsIcon from \"@material-ui/icons/Pets\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport React from \"react\";\r\nlet initialState =  {\r\n    categories: [\r\n        {category:<Grid align={'center'}><RestaurantMenuRoundedIcon color={\"primary\"}/>Food </Grid>,\r\n            description: 'ashan', date: '21.01.2021'},\r\n        {category:<Grid align={'center'}><ShoppingBasketIcon color={\"primary\"}/> Clothes </Grid>,\r\n            description: 'forum', date: '18.01.2021'},\r\n        {category:<Grid align={'center'}><LocalCafeIcon color={\"primary\"}/>Restaurants</Grid>,\r\n            description: 'kryivka', date: '18.01.2021'},\r\n        {category:<Grid align={'center'}><LocalGasStationIcon color={\"primary\"}/>Fuel</Grid>,\r\n            description: 'okko', date: '18.01.2021'},\r\n        {category:<Grid align={'center'}><PetsIcon color={\"primary\"}/>Pets</Grid>,\r\n            description: ')))', date: '18.01.2021'},\r\n        {category:<Grid align={'center'}><DescriptionIcon color={\"primary\"}/>Utility Bills</Grid>,\r\n            description: 'big bills((', date: '18.01.2021'}\r\n    ]\r\n\r\n}\r\nexport const addCategoryReducer = (state=initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: [...state.categories, action.payload]\r\n            }\r\n    }\r\n    return state;\r\n}","\r\nimport {filterIncomesCategoryReducer} from \"./filter-incomes-category-reducer\";\r\nimport {combineReducers} from \"redux\";\r\nimport {addCategoryReducer} from \"./add-category-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    addCategoryReducer\r\n    /*authors: appReducer,\r\n    count:counterLikesReducer*/\r\n\r\n});","import {combineReducers, createStore} from \"redux\";\r\nimport{composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {rootReducer} from \"../Redux/reducers/rootReducer\";\r\nconst store = createStore(rootReducer, composeWithDevTools);\r\n\r\nwindow.store = store;\r\nconsole.log(store.getState());\r\nexport default store;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n    return(\r\n        <header className=\"header\">\r\n        \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n// import Home from \"../Home/Home\";\r\n// import Charts from \"../Charts/Charts\";\r\n// import Categories from \"../Categories/Categories\";\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className=\"navbar-wrapper\">\r\n            <div><NavLink to=\"/home\" >Home</NavLink></div>\r\n            <div><NavLink to=\"/charts\" >Charts</NavLink></div>\r\n            <div><NavLink to=\"/categories\">Categories</NavLink></div>\r\n            </div>\r\n           \r\n           \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Header from \"./Header/Header\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\n\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            <Navbar data={props.data}/>\r\n            <div className=\"content\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport {makeStyles, Paper, TableBody, TableContainer, TableHead} from \"@material-ui/core\";\r\nimport \"../Charges/changes.css\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nclass Charges extends Component {\r\n    useStyles = makeStyles(theme => ({\r\n        table: {\r\n            minWidth: 350,\r\n        },\r\n    }));\r\n\r\n    render() {\r\n        const classes = this.props;\r\n        return (\r\n            <div>\r\n                <h2 className=\"title\">Charges</h2>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                            <ProductHeadRow products={this.props.products}\r\n                                            checkFilterProducts={this.props.checkFilterProducts}\r\n                                            checkFilterTotal={this.props.checkFilterTotal}\r\n                                            checkFilterDate={this.props.checkFilterDate}\r\n                            />\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.props.products.map((item, i) => {\r\n                                return <ProductRow category={item.category} description={item.description}\r\n                                                   date={item.date} total={item.total} key={i}/>\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ProductHeadRow extends React.Component {\r\n    handleOnChange = (e) => {\r\n        const filterProducts = this.props.products.filter(item => item.category === e.target.value);\r\n        this.props.checkFilterProducts(filterProducts);\r\n    }\r\n    handleMoneyOnClick = (e) => {\r\n        if (e.target.value === 'More') {\r\n            let filterTotal = this.props.products.sort((a,b)=>{\r\n                return b.total-a.total;\r\n            })\r\n            this.props.checkFilterTotal(filterTotal);\r\n        } else if (e.target.value === 'Less') {\r\n            let filterTotal = this.props.products.sort((a,b)=>{\r\n                return a.total-b.total;\r\n            })\r\n            this.props.checkFilterTotal(filterTotal);\r\n        }\r\n\r\n    }\r\n    handleDateOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        const begin = e.target[0].value;\r\n        const end = e.target[1].value;\r\n        let beginDate = new Date(begin);\r\n        let endDate = new Date(end);\r\n        let filterDate = this.props.products.filter(item => {\r\n            return ((new Date(item.date)).getTime() >= beginDate.getTime()) &&\r\n            ((new Date(item.date)).getTime()<= endDate.getTime())\r\n        })\r\n        this.props.checkFilterDate(filterDate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th className='chargesMenuCategory' align='center'>\r\n                    <div>Category</div>\r\n                    <InputLabel htmlFor=\"select\"/>\r\n                    <NativeSelect onChange={this.handleOnChange} id=\"select\">\r\n                        <option value=\"Category\">Select category</option>\r\n                        <option value=\"Food\">Food</option>\r\n                        <option value=\"Restaurants\">Restaurant</option>\r\n                        <option value=\"Clothes\">Clothes</option>\r\n                        <option value=\"Fuel\">Fuel</option>\r\n                        <option value=\"Pets\">Pets</option>\r\n                        <option value=\"Utility bills\">Utility bills</option>\r\n                    </NativeSelect>\r\n                </th>\r\n                <th className='chargesMenuDescription' align='center'>\r\n                    <div>Description</div>\r\n                </th>\r\n                <th className='chargesMenuDate'  align='center'>\r\n                    <div >Date</div>\r\n                    <form onSubmit={this.handleDateOnSubmit}>\r\n                    <TextField className='date-textField'\r\n                        id=\"date\"\r\n                        label=\"Begin\"\r\n                        type=\"date\"\r\n                        defaultValue=\"2021-01-11\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                        <TextField className='date-textField'\r\n                            id=\"date\"\r\n                            label=\"End\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <button className='dateBtn' type='submit'>Get</button>\r\n                    </form>\r\n                </th>\r\n                <th className='chargesMenuTotal' align='center'>\r\n                    <div>Total, $</div>\r\n                    <InputLabel htmlFor=\"select\"/>\r\n                    <NativeSelect onChange={this.handleMoneyOnClick} id=\"select\">\r\n                        <option value=\"Category\">Sort money</option>\r\n                        <option value=\"More\">More</option>\r\n                        <option value=\"Less\">Less</option>\r\n                    </NativeSelect></th>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass ProductRow extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <tr>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.category}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.description}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.date}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.total}</td>\r\n\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Charges;\r\n\r\n","import React, {Component} from 'react';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport {TableBody} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RestaurantMenuRoundedIcon from \"@material-ui/icons/RestaurantMenuRounded\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport LocalCafeIcon from \"@material-ui/icons/LocalCafe\";\r\nimport LocalGasStationIcon from \"@material-ui/icons/LocalGasStation\";\r\nimport PetsIcon from \"@material-ui/icons/Pets\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n import \"./categories.css\";\r\n\r\n\r\n\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [\r\n                {category:<Grid align={'center'}><RestaurantMenuRoundedIcon color={\"primary\"}/>Food </Grid>,\r\n                    description: 'ashan', date: '21.01.2021'},\r\n                {category:<Grid align={'center'}><ShoppingBasketIcon color={\"primary\"}/> Clothes </Grid>,\r\n                    description: 'forum', date: '18.01.2021'},\r\n                {category:<Grid align={'center'}><LocalCafeIcon color={\"primary\"}/>Restaurants</Grid>,\r\n                    description: 'kryivka', date: '18.01.2021'},\r\n                {category:<Grid align={'center'}><LocalGasStationIcon color={\"primary\"}/>Fuel</Grid>,\r\n                    description: 'okko', date: '18.01.2021'},\r\n                {category:<Grid align={'center'}><PetsIcon color={\"primary\"}/>Pets</Grid>,\r\n                    description: ')))', date: '18.01.2021'},\r\n                {category:<Grid align={'center'}><DescriptionIcon color={\"primary\"}/>Utility Bills</Grid>,\r\n                    description: 'big bills((', date: '18.01.2021'}\r\n            ]\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Categories</h1>\r\n                <Table >\r\n                    <TableHead >\r\n                    <CategoriesHeadRow />\r\n                    </TableHead>\r\n                    <TableBody className=\"center\">\r\n                    {this.state.categories.map(item => {\r\n                        return <CategoriesRow category={item.category} description={item.description}\r\n                                           date={item.date} total={item.total}/>\r\n                    })}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass CategoriesHeadRow extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr className=\"header_tr\">\r\n                <th>Category</th>\r\n                <th>Description</th>\r\n                <th>Date</th>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass CategoriesRow extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.category}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.description}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.date}</td>\r\n\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Categories;","import React, {Component} from 'react';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ol className=\"ol-list\">\r\n                    <li>Необхідно створити веб-додаток для обліку доходів / витрат</li>\r\n                    <li>Додаток працює без входу, всі дані зберігаємо в localStorage</li>\r\n                    <li>Додаток необхідно робити на Реакті. Решта технології або бібліотеки за бажанням ментора /\r\n                        студентів\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Chart, PieSeries, Title,} from '@devexpress/dx-react-chart-material-ui';\r\nimport {Animation} from '@devexpress/dx-react-chart';\r\nexport default class ChartsOfCharges extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chargesCategories: ['Food', 'Clothes', 'Restaurants', 'Fuel', 'Pets', 'Utility bills']\r\n        };\r\n        this.takeDataCharges=this.takeDataCharges.bind(this);\r\n    }\r\n    takeDataCharges = () => {\r\n\r\n        let dataCharges = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let newRow = JSON.parse(localStorage.getItem(`${localStorage.key(i)}`));\r\n           if (this.state.chargesCategories.includes(newRow.category)) {\r\n                dataCharges.push(newRow);\r\n            }\r\n        }\r\n        return dataCharges;\r\n    }\r\n    render() {\r\n        const chartData = this.takeDataCharges();\r\n        return (\r\n            <Paper>\r\n                <Chart\r\n                    data={chartData}\r\n                >\r\n                    <PieSeries\r\n                        valueField=\"total\"\r\n                        argumentField=\"category\"\r\n                        innerRadius={0.6}\r\n                    />\r\n                    <Title\r\n                        text=\"All charges for the month\"\r\n                    />\r\n                    <Animation />\r\n                </Chart>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Chart, PieSeries, Title,} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport {Animation} from '@devexpress/dx-react-chart';\r\n\r\nexport default class ChartsOfIncomes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            incomesCategories: ['Salary', 'Rent', 'Bonuses', 'Deposits', 'Profits', 'Sale of property']\r\n        };\r\n    }\r\n    takeDataIncomes = () => {\r\n        let dataIncomes = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let newRow = JSON.parse(localStorage.getItem(`${localStorage.key(i)}`));\r\n            if (this.state.incomesCategories.includes(newRow.category)) {\r\n                dataIncomes.push(newRow);\r\n\r\n            }\r\n        }\r\n        return dataIncomes;\r\n    }\r\n    render() {\r\n\r\n        const chartData = this.takeDataIncomes();\r\n        return (\r\n            <Paper>\r\n                <Chart\r\n                    data={chartData}\r\n                >\r\n                    <PieSeries\r\n                        valueField=\"total\"\r\n                        argumentField=\"category\"\r\n                        innerRadius={0.6}\r\n                    />\r\n                    <Title\r\n                        text=\"All incomes for the month\"\r\n                    />\r\n                    <Animation />\r\n                </Chart>\r\n            </Paper>\r\n        );\r\n\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n// Ref : https://developers.google.com/chart/interactive/docs/gallery/histogram\r\n\r\nconst data = [\r\n    [\"Date\", \"Charges\", \"Incomes\"],\r\n    [\"11.01.2021\", 19.99, 50],\r\n    [\"15.01.2021\", 49.99, 0],\r\n    [\"26.01.2021\", 29.99, 200],\r\n    [\"27.01.2021\", 38.99, 500],\r\n    [\"29.01.2021\", 9.99, 150],\r\n    [\"31.01.2021\", 129.99, 0]\r\n];\r\nconst options = {\r\n    title: \"Income-Charges\",\r\n    curveType: \"function\",\r\n    legend: { position: \"bottom\" }\r\n};\r\nexport default class ChartsIncomeCharges extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Chart\r\n                    chartType=\"LineChart\"\r\n                    width=\"100%\"\r\n                    height=\"400px\"\r\n                    data={data}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ChartsOfCharges from \"./ChartsOfCharges\";\r\nimport ChartsOfIncomes from \"./ChartsOfIncomes\";\r\nimport ChartsIncomeCharges from \"./ChartsIncomeCharges\";\r\n\r\nexport default class Charts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ChartsOfCharges dataCharges={this.props.dataCharges}\r\n                                 changeChart={this.props.changeChart}\r\n                                 chargesCategories={this.props.chargesCategories}\r\n                />\r\n                <ChartsOfIncomes dataIncomes={this.props.dataIncomes}\r\n                                 changeIncomesChart={this.props.changeChart}\r\n                                 changeState={this.props.changeState}\r\n                                 incomesCategories={this.props.incomesCategories}/>\r\n                <ChartsIncomeCharges                    />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {makeStyles, Paper, TableBody, TableContainer, TableHead} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport \"./Charges/changes.css\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport filterIncomesCategory from \"../../Redux/actions/filter-incomes-category-action\";\r\nimport {connect} from \"react-redux\";\r\nimport mapDispatchToProps from \"react-redux/lib/connect/mapDispatchToProps\";\r\n\r\n\r\n\r\nclass Incomes extends Component {\r\n    useStyles = makeStyles(theme => ({\r\n        table: {\r\n            minWidth: 350,\r\n        },\r\n    }))\r\n    render() {\r\n        const classes = this.props;\r\n        return (\r\n            <div>\r\n                <h2 className =\"title\">Incomes</h2>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                            <ProductHeadRow\r\n                                incomes={this.props.incomes}\r\n                                checkFilterIncomesCategory={this.props.checkFilterIncomesCategory}\r\n                                checkFilterIncomesTotal={this.props.checkFilterIncomesTotal}\r\n                                checkFilterIncomesDate={this.props.checkFilterIncomesDate}\r\n                            />\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.props.incomes.map((item, i) => {\r\n                                return <ProductRow category={item.category} description={item.description}\r\n                                                   date={item.date} total={item.total} key={i}/>\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ProductHeadRow extends React.Component {\r\n    handleIncomeCategoryOnChange = (e) => {\r\n        console.log(e.target.value);\r\n        const filterCategory = this.props.incomes.filter(item => item.category === e.target.value);\r\n        console.log(filterCategory);\r\n        this.props.checkFilterIncomesCategory(filterCategory);\r\n    }\r\n    handleIncomesDateOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        const begin = e.target[0].value;\r\n        const end = e.target[1].value;\r\n        let beginDate = new Date(begin);\r\n        let endDate = new Date(end);\r\n        let filterDate = this.props.incomes.filter(item => {\r\n            return ((new Date(item.date)).getTime() >= beginDate.getTime()) &&\r\n                ((new Date(item.date)).getTime()<= endDate.getTime())\r\n        })\r\n        this.props.checkFilterIncomesDate(filterDate);\r\n    }\r\n    handleIncomesMoneyOnClick = (e) => {\r\n        if (e.target.value === 'More') {\r\n            let filterTotal = this.props.incomes.sort((a,b)=>{\r\n                return b.total-a.total;\r\n            })\r\n            this.props.checkFilterIncomesTotal(filterTotal);\r\n        } else if (e.target.value === 'Less') {\r\n            let filterTotal = this.props.incomes.sort((a,b)=>{\r\n                return a.total-b.total;\r\n            })\r\n            this.props.checkFilterIncomesTotal(filterTotal);\r\n        }\r\n\r\n    }\r\n    getDate = () => {\r\n        return new Date();\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th align={\"center\"}><div>Category</div><InputLabel htmlFor=\"select\"/>\r\n                    <NativeSelect onChange={this.handleIncomeCategoryOnChange} id=\"select\">\r\n                        <option value=\"Category\">Select category</option>\r\n                        <option value=\"Salary\">Salary</option>\r\n                        <option value=\"Rent\">Rent</option>\r\n                        <option value=\"Bonuses\">Bonuses</option>\r\n                        <option value=\"Deposits\">Deposits</option>\r\n                        <option value=\"Profits\">Profits</option>\r\n                        <option value=\"Sale of property\">Sale of property</option>\r\n                    </NativeSelect></th>\r\n                <th align={\"center\"}>Description</th>\r\n                <th align={\"center\"}><div >Date</div>\r\n                    <form onSubmit={this.handleIncomesDateOnSubmit}>\r\n                        <TextField className='date-textField'\r\n                                   id=\"date\"\r\n                                   label=\"Begin\"\r\n                                   type=\"date\"\r\n                                   defaultValue=\"2021-01-11\"\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                        />\r\n                        <TextField className='date-textField'\r\n                                   id=\"date\"\r\n                                   label=\"End\"\r\n                                   type=\"date\"\r\n                                   defaultValue={()=> new Date()}\r\n                                   InputLabelProps={{\r\n                                       shrink: true,\r\n                                   }}\r\n                        />\r\n                        <button className='dateBtn' type='submit'>Get</button>\r\n                    </form></th>\r\n                <th align={\"center\"}><div>Total, $</div>\r\n                    <InputLabel htmlFor=\"select\"/>\r\n                    <NativeSelect onChange={this.handleIncomesMoneyOnClick} id=\"select\">\r\n                        <option value=\"Category\">Sort money</option>\r\n                        <option value=\"More\">More</option>\r\n                        <option value=\"Less\">Less</option>\r\n                    </NativeSelect></th>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass ProductRow extends React.Component {\r\n    handleChange = (e) => {\r\n        console.log(e.target.value);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <tr>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.category}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.description}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.date}</td>\r\n                <td align={\"center\"} height={50} width={150}>{this.props.total}</td>\r\n\r\n            </tr>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n/*const getStateToProps = (state) => {\r\n    return  {\r\n        incomes: state.filterIncomesCategoryReducer\r\n    }*/\r\n\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        filterIncomesCategory: e => dispatch(filterIncomesCategory(e))\r\n    }\r\n\r\n}*/\r\n\r\nexport default Incomes;\r\n//export default Incomes;","import React from 'react';\r\nimport '../../App.css';\r\nimport {AppBar, Tabs, Tab} from '@material-ui/core';\r\nimport Charges from \"./Charges/Charges\";\r\nimport Categories from \"../Categories/Categories\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Home from \"../Home/Home\";\r\nimport Charts from \"../Charts/Charts\";\r\nimport Incomes from \"./Incomes\";\r\n\r\n\r\nconst SimpleTabs = (props) => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleTabs = (e, val) => {\r\n        setValue(val);\r\n    }\r\n    return (\r\n\r\n            <div className=\"tabs-wrapper\">\r\n                <div>\r\n                    <AppBar position=\"static\" style={{background: '#848482'}}>\r\n                        <Tabs value={value} onChange={handleTabs}>\r\n                            <Tab label=\"Charges\"/>\r\n                            <Tab label=\"Incomes\"/>\r\n                        </Tabs>\r\n                        <div>\r\n                            <Route path='/home' component={Home}/>\r\n                            <Route path='/charts' component={Charts}/>\r\n                            <Route path='/categories' component={Categories}/>\r\n                        </div>\r\n                    </AppBar>\r\n                </div>\r\n                <TabPanel value={value} index={0}>\r\n                    <Charges\r\n                        products={props.products}\r\n                        handleChange={props.handleChange}\r\n                        checkFilterProducts={props.checkFilterProducts}\r\n                        checkFilterTotal={props.checkFilterTotal}\r\n                        checkFilterDate={props.checkFilterDate}\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Incomes\r\n                        state={props.state}\r\n                        incomes={props.incomes}\r\n                        checkFilterIncomesCategory={props.checkFilterIncomesCategory}\r\n                        checkFilterIncomesTotal={props.checkFilterIncomesTotal}\r\n                        checkFilterIncomesDate={props.checkFilterIncomesDate}/>\r\n                </TabPanel>\r\n\r\n            </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index} = props;\r\n    return (\r\n        <div>\r\n            {\r\n                value === index && (\r\n                    <div>{children}</div>\r\n                )\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SimpleTabs;\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {connect} from \"react-redux\";\r\nimport addCategory from \"../../Redux/actions/add-category-action\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"linear-gradient(#656565, #444)\",\r\n        border: \"solid 1px #535353\",\r\n        borderBottom: \"solid 3px #414141\",\r\n        boxShadow: \"inset 0 0 0 1px #939393\",\r\n        color: \"#fff\",\r\n        textShadow: \"0 1px 0 #2f2f2f\"\r\n    },\r\n  });\r\n\r\n\r\nconst AddNewCategory=(props)=> {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleCategoryOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target[0].value)\r\n        const newCategory = {\r\n            id: Math.floor(Math.random()*100),\r\n            category: e.target[0].value,\r\n            description: e.target[1].value,\r\n            date: e.target[2].value\r\n        };\r\n        console.log(newCategory)\r\n        /*localStorage.setItem(`${newRow.id}`, JSON.stringify(newRow));\r\n        props.products.push(newRow);*/\r\n        //addCategory(newCategory);\r\n    }\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\"  onClick={handleClickOpen} className={classes.root} > Add new category</Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New category</DialogTitle>\r\n                <form onSubmit={handleCategoryOnSubmit}>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <InputLabel id=\"demo-controlled-open-select-label\">Select icon</InputLabel>\r\n                    <Select native onChange={handleClickOpen} labelId=\"demo-controlled-open-select-label\">\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value={10}>Ten</option>\r\n                        <option value={20}>Twenty</option>\r\n                        <option value={30}>Thirty</option>\r\n                    </Select>\r\n                </DialogContent>\r\n                </form>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">Add</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AddNewCategory;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"linear-gradient(#656565, #444)\",\r\n        border: \"solid 1px #535353\",\r\n        borderBottom: \"solid 3px #414141\",\r\n        boxShadow: \"inset 0 0 0 1px #939393\",\r\n        color: \"#fff\",\r\n        textShadow: \"0 1px 0 #2f2f2f\"\r\n    },\r\n});\r\n\r\n    const AddNewCharge=(props)=> {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target[0].value)\r\n        const newRow = {\r\n            id: Math.floor(Math.random()*100),\r\n            category: e.target[2].value,\r\n            description: e.target[1].value,\r\n            date: e.target[3].value,\r\n            total: e.target[0].value\r\n        };\r\n        localStorage.setItem(`${newRow.id}`, JSON.stringify(newRow));\r\n        props.products.push(newRow);\r\n        props.handleOnSubmit();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen} className={classes.root}>Add new charge</Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New charge</DialogTitle>\r\n                <form onSubmit={handleOnSubmit}>\r\n                <DialogContent >\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        placeholder=\"only number\"\r\n                        id=\"total\"\r\n                        label=\"Total\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <InputLabel id=\"demo-controlled-open-select-label\">Select category</InputLabel>\r\n                    <Select native id='category' labelId=\"demo-controlled-open-select-label\">\r\n                        <option aria-label=\"None\" value=\"\"/>\r\n                        <option id='Food' value='Food'>Food</option>\r\n                        <option id='Clothes' value='Clothes'>Clothes</option>\r\n                        <option id='Pets' value='Pets'>Pets</option>\r\n                        <option id='Restaurants' value='Restaurants'>Restaurants</option>\r\n                        <option id='Fuel' value='Fuel'>Fuel</option>\r\n                        <option id='Utility bills' value='Utility bills'>Utility Bills</option>\r\n                    </Select>\r\n                    <InputLabel id=\"test\">Date</InputLabel>\r\n                    <TextField\r\n                        labelId=\"test\"\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleClose} type='submit' color=\"primary\">Add new charge</Button>\r\n                </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewCharge;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"linear-gradient(#656565, #444)\",\r\n        border: \"solid 1px #535353\",\r\n        borderBottom: \"solid 3px #414141\",\r\n        boxShadow: \"inset 0 0 0 1px #939393\",\r\n        color: \"#fff\",\r\n        textShadow: \"0 1px 0 #2f2f2f\"\r\n    },\r\n});\r\n\r\nfunction AddNewIncome(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newRow = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            category: e.target[2].value,\r\n            description: e.target[1].value,\r\n            date: e.target[3].value,\r\n            total: e.target[0].value\r\n        };\r\n        localStorage.setItem(`${newRow.id}`, JSON.stringify(newRow));\r\n        props.incomes.push(newRow);\r\n        props.handleIncomeOnSubmit();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen} className={classes.root}>Add new income</Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New income</DialogTitle>\r\n                <form onSubmit={handleOnSubmit}>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"total\"\r\n                            placeholder=\"only number\"\r\n                            label=\"Total\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Description\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                        />\r\n\r\n\r\n                        <InputLabel id=\"demo-controlled-open-select-label\">Select category</InputLabel>\r\n                        <Select native onChange={handleClickOpen} labelId=\"demo-controlled-open-select-label\">\r\n                            <option aria-label=\"None\" value=\"\"/>\r\n                            <option>Salary</option>\r\n                            <option>Bonuses</option>\r\n                            <option>Deposits</option>\r\n                            <option>Profits</option>\r\n                            <option>Rent</option>\r\n                            <option>Sale of property</option>\r\n                        </Select>\r\n\r\n                        <InputLabel id=\"test\">Date</InputLabel>\r\n                        <TextField\r\n                            labelId=\"test\"\r\n                            id=\"date\"\r\n                            type=\"date\"\r\n                        />\r\n\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                        <Button onClick={handleClose} type='submit' color=\"primary\">Add new income</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewIncome;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navigation from \"./components/Navigation\";\r\nimport TabsContent from \"./components/Tabs/TabsContent\";\r\nimport AddNewCategory from \"./components/Dialogs/AddNewCategory\";\r\nimport AddNewCharge from \"./components/Dialogs/AddNewCharge\";\r\nimport AddNewIncome from \"./components/Dialogs/AddNewIncome\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Charts from \"./components/Charts/Charts\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [\r\n                {\r\n                    id: 1,\r\n                    category: 'Food',\r\n                    description: 'ashan', date: '2021.01.11', total: '19.99'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    category: 'Clothes',\r\n                    description: 'forum', date: '2021.01.15', total: '49.99'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    category: 'Restaurants',\r\n                    description: 'kryivka', date: '2021.01.21', total: '29.99'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    category: 'Fuel',\r\n                    description: 'okko', date: '2021.01.27', total: '38.99'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    category: 'Pets',\r\n                    description: ')))', date: '2021.02.01', total: '9.99'\r\n                },\r\n                {\r\n                    id: 6,\r\n                    category: 'Utility Bills',\r\n                    description: 'big bills((', date: '2021.02.3', total: '59.99'\r\n                },\r\n                {\r\n                    category: 'Utility Bills',\r\n                    description: 'big bills((', date: '2021.01.31', total: '29.99'\r\n                }\r\n            ],\r\n            incomes: [\r\n                {id: 1, category: 'Salary', description: 'For a good job', date: '26.01.2021', total: 500},\r\n                {id: 2, category: 'Rent', description: 'Rent apartment', date: '27.01.2021', total: 600},\r\n                {id: 3, category: 'Profits', description: 'Rent apartment', date: '27.01.2021', total: 200}\r\n            ],\r\n            chargesCategories: ['Food', 'Clothes', 'Restaurants', 'Fuel', 'Pets', 'Utility bills'],\r\n            incomesCategories: ['Salary', 'Rent', 'Bonuses', 'Deposits', 'Profits', 'Sale of property']\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.checkFilterProducts=this.checkFilterProducts.bind(this);\r\n        this.checkFilterTotal=this.checkFilterTotal.bind(this);\r\n        this.checkFilterDate=this.checkFilterDate.bind(this);\r\n        this.checkFilterIncomesCategory=this.checkFilterIncomesCategory.bind(this);\r\n        this.checkFilterIncomesTotal=this.checkFilterIncomesTotal.bind(this);\r\n        this.checkFilterIncomesDate=this.checkFilterIncomesDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleChange();\r\n        this.changeState();\r\n        this.findBalance();\r\n        this.checkFilterProducts();\r\n        this.checkFilterTotal();\r\n        this.checkFilterDate();\r\n        this.checkFilterIncomesCategory();\r\n        this.checkFilterIncomesTotal();\r\n        this.checkFilterIncomesDate()\r\n    }\r\n\r\n    handleChange() {\r\n        let _products = [...this.state.products];\r\n        this.setState({products: _products});\r\n        let _incomes = [...this.state.incomes];\r\n        this.setState({incomes: _incomes});\r\n    }\r\n\r\n    changeState() {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let newRow = JSON.parse(localStorage.getItem(`${localStorage.key(i)}`));\r\n            let _incomes = this.state.incomes;\r\n            let _products = this.state.products;\r\n            if (this.state.chargesCategories.includes(newRow.category)) {\r\n                _products.push(newRow);\r\n                //_products.forEach(item => console.log(item.id));\r\n                this.setState({products: _products});\r\n            } else if (this.state.incomesCategories.includes(newRow.category) && newRow) {\r\n                _incomes.push(newRow);\r\n                this.setState({incomes: _incomes});\r\n            }\r\n        }\r\n    }\r\n\r\n    findBalance() {\r\n        let balance;\r\n        let totalIncomes = 0;\r\n        let totalCharges = 0;\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let newRow = JSON.parse(localStorage.getItem(`${localStorage.key(i)}`));\r\n            if (this.state.chargesCategories.includes(newRow.category)) {\r\n                totalCharges += +newRow.total;\r\n            } else {\r\n                totalIncomes += +newRow.total;\r\n            }\r\n        }\r\n        balance = totalIncomes - totalCharges;\r\n        if (balance > 0 && balance <= 300) {\r\n            return `Stop spending! ${balance}`;\r\n        } else if (balance > 300 && balance <= 500) {\r\n            return `Attention! You have very little money:${balance}`\r\n        } else if (balance <= 0) {\r\n            return `Ooops! You are bankrupt! ${balance}`;\r\n        } else {\r\n            return balance;\r\n        }\r\n    }\r\n    checkFilterProducts(filterProducts) {\r\n        if (filterProducts) {\r\n            this.setState({...this.state, products: filterProducts});\r\n        }\r\n    }\r\n    checkFilterTotal(filterTotal) {\r\n        if(filterTotal) {\r\n            this.setState({...this.state, products: filterTotal})\r\n        }\r\n    }\r\n    checkFilterDate(filterDate) {\r\n        if(filterDate) {\r\n            this.setState({...this.state, products: filterDate})\r\n        }\r\n    }\r\n    checkFilterIncomesCategory(filterCategory) {\r\n        if(filterCategory) {\r\n            this.setState({...this.state, incomes: filterCategory})\r\n        }\r\n    }\r\n    checkFilterIncomesTotal(filterTotal) {\r\n        if(filterTotal) {\r\n            this.setState({...this.state, incomes: filterTotal})\r\n        }\r\n    }\r\n    checkFilterIncomesDate(filterDate) {\r\n        if(filterDate) {\r\n            this.setState({...this.state, incomes: filterDate})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"main-page\">\r\n                    <div className=\"main-wrapper\">\r\n                        <Navigation/>\r\n                    </div>\r\n                    <div className=\"main-btn\">\r\n                        <div className=\"bnt-add\">\r\n                            <AddNewCategory/>\r\n                            <AddNewCharge\r\n                                products={this.state.products}\r\n                                handleOnSubmit={this.handleChange}\r\n                            />\r\n                            <AddNewIncome\r\n                                incomes={this.state.incomes}\r\n                                handleIncomeOnSubmit={this.handleChange}/>\r\n                        </div>\r\n                        <div className='balance'>BALANCE: {this.findBalance()}$</div>\r\n                        <div className=\"bnt-tabs\">\r\n                            <TabsContent\r\n                                state = {this.state}\r\n                                products={this.state.products}\r\n                                handleChange={this.handleChange}\r\n                                incomes={this.state.incomes}\r\n                                data={this.state.products}\r\n                                checkFilterProducts={this.checkFilterProducts}\r\n                                checkFilterTotal={this.checkFilterTotal}\r\n                                checkFilterDate={this.checkFilterDate}\r\n                                checkFilterIncomesCategory={this.checkFilterIncomesCategory}\r\n                                checkFilterIncomesTotal={this.checkFilterIncomesTotal}\r\n                                checkFilterIncomesDate={this.checkFilterIncomesDate}\r\n                            />\r\n                            <Charts dataCharges={this.state.products}\r\n                                    dataIncomes={this.state.incomes}\r\n                                    changeChart={this.handleChange}\r\n                                    chargesCategories={this.state.chargesCategories}\r\n                                    changeState={this.changeState}\r\n                                    incomesCategories={this.state.incomesCategories}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './store/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\n\n\n\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n          </React.StrictMode>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}